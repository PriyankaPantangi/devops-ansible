---
- name: Orchestrate Multi-Tier Application Deployment
  hosts: ungrouped
  become: true
  ignore_errors: true

  vars:
    db_root_password: 'secure_password'  

  tasks:
    - name: Install Python MySQL dependencies
      apt:
        name:
          - python3-pymysql
        state: present  
    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present

    - name: Start and enable MySQL service
      service:
        name: mysql
        state: restarted
        enabled: true
        use: "/usr/sbin/service"
    - name: Wait for MySQL to be ready
      wait_for:
        port: 3306
        host: localhost
        state: started
        delay: 10
        timeout: 300

# Application Tier / middle tier
- name: Deploy Application Backend
  hosts: ungrouped
  become: true
  ignore_errors: true
  vars:
    app_name: 'web_app'
  tasks:
    - name: Install dependencies for the application
      apt:
        name:
          - apache2
          - python3
        state: present

    - name: Start and enable Apache service
      service:
        name: apache2
        state: started
        enabled: true

    - name: Copy application files to server
      copy:
        src: html
        dest: /var/www/html/{{ app_name }}
        owner: www-data
        group: www-data
        mode: '0755'

# Web Tier
- name: Configure Web Frontend
  hosts: ungrouped
  become: true
  ignore_errors: true
  vars:
    app_name: 'web_app'  
    web_port: 80
  tasks:
    - name: Install nginx
      apt:
        name: nginx
        state: present

    - name: Configure nginx reverse proxy
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ app_name }}.conf
      notify: Restart nginx

    - name: Enable nginx site
      file:
        src: /etc/nginx/sites-available/{{ app_name }}.conf
        dest: /etc/nginx/sites-enabled/{{ app_name }}.conf
        state: link

  handlers:
    - name: Restart nginx
      command: service nginx restart